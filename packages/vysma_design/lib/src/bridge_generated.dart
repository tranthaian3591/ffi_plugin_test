// AUTO GENERATED FILE, DO NOT EDIT.
// Generated by `flutter_rust_bridge`@ 1.78.0.
// ignore_for_file: non_constant_identifier_names, unused_element, duplicate_ignore, directives_ordering, curly_braces_in_flow_control_structures, unnecessary_lambdas, slash_for_doc_comments, prefer_const_literals_to_create_immutables, implicit_dynamic_list_literal, duplicate_import, unused_import, unnecessary_import, prefer_single_quotes, prefer_const_constructors, use_super_parameters, always_use_package_imports, annotate_overrides, invalid_use_of_protected_member, constant_identifier_names, invalid_use_of_internal_member, prefer_is_empty, unnecessary_const

import 'dart:convert';
import 'dart:async';
import 'package:meta/meta.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';
import 'package:uuid/uuid.dart';

import 'dart:convert';
import 'dart:async';
import 'package:meta/meta.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';
import 'package:uuid/uuid.dart';
import 'bridge_generated.io.dart'
    if (dart.library.html) 'bridge_generated.web.dart';

abstract class VysmaDesignLayout {
  Future<VysmaColumnLayoutSetting> createRootWidgetTree({dynamic hint});

  FlutterRustBridgeTaskConstMeta get kCreateRootWidgetTreeConstMeta;

  Future<VysmaColumnLayoutSetting> columnLayoutDefaultSetting({dynamic hint});

  FlutterRustBridgeTaskConstMeta get kColumnLayoutDefaultSettingConstMeta;

  Future<String> columnLayoutSettingToString(
      {required VysmaColumnLayoutSetting widgetTree, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kColumnLayoutSettingToStringConstMeta;

  Future<VysmaColumnLayoutSetting?> stringToColumnLayoutSetting(
      {required String data, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kStringToColumnLayoutSettingConstMeta;

  Future<String> widgetTypeToName(
      {required WidgetType widgetType, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kWidgetTypeToNameConstMeta;

  Future<String> widgetTypeToIcon(
      {required WidgetType widgetType, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kWidgetTypeToIconConstMeta;

  Future<String> helloWorld({dynamic hint});

  FlutterRustBridgeTaskConstMeta get kHelloWorldConstMeta;
}

class VysmaColumnLayoutSetting {
  String elementId;
  String parentElementId;
  String icon;
  String label;

  VysmaColumnLayoutSetting({
    required this.elementId,
    required this.parentElementId,
    required this.icon,
    required this.label,
  });
}

enum WidgetType {
  Root,
  Row,
  Column,
  Button,
  Text,
  Icon,
}

class VysmaDesignLayoutImpl implements VysmaDesignLayout {
  final VysmaDesignLayoutPlatform _platform;
  factory VysmaDesignLayoutImpl(ExternalLibrary dylib) =>
      VysmaDesignLayoutImpl.raw(VysmaDesignLayoutPlatform(dylib));

  /// Only valid on web/WASM platforms.
  factory VysmaDesignLayoutImpl.wasm(FutureOr<WasmModule> module) =>
      VysmaDesignLayoutImpl(module as ExternalLibrary);
  VysmaDesignLayoutImpl.raw(this._platform);
  Future<VysmaColumnLayoutSetting> createRootWidgetTree({dynamic hint}) {
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_create_root_widget_tree(port_),
      parseSuccessData: _wire2api_vysma_column_layout_setting,
      constMeta: kCreateRootWidgetTreeConstMeta,
      argValues: [],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kCreateRootWidgetTreeConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "create_root_widget_tree",
        argNames: [],
      );

  Future<VysmaColumnLayoutSetting> columnLayoutDefaultSetting({dynamic hint}) {
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) =>
          _platform.inner.wire_column_layout_default_setting(port_),
      parseSuccessData: _wire2api_vysma_column_layout_setting,
      constMeta: kColumnLayoutDefaultSettingConstMeta,
      argValues: [],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kColumnLayoutDefaultSettingConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "column_layout_default_setting",
        argNames: [],
      );

  Future<String> columnLayoutSettingToString(
      {required VysmaColumnLayoutSetting widgetTree, dynamic hint}) {
    var arg0 =
        _platform.api2wire_box_autoadd_vysma_column_layout_setting(widgetTree);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) =>
          _platform.inner.wire_column_layout_setting_to_string(port_, arg0),
      parseSuccessData: _wire2api_String,
      constMeta: kColumnLayoutSettingToStringConstMeta,
      argValues: [widgetTree],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kColumnLayoutSettingToStringConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "column_layout_setting_to_string",
        argNames: ["widgetTree"],
      );

  Future<VysmaColumnLayoutSetting?> stringToColumnLayoutSetting(
      {required String data, dynamic hint}) {
    var arg0 = _platform.api2wire_String(data);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) =>
          _platform.inner.wire_string_to_column_layout_setting(port_, arg0),
      parseSuccessData: _wire2api_opt_box_autoadd_vysma_column_layout_setting,
      constMeta: kStringToColumnLayoutSettingConstMeta,
      argValues: [data],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kStringToColumnLayoutSettingConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "string_to_column_layout_setting",
        argNames: ["data"],
      );

  Future<String> widgetTypeToName(
      {required WidgetType widgetType, dynamic hint}) {
    var arg0 = api2wire_widget_type(widgetType);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_widget_type_to_name(port_, arg0),
      parseSuccessData: _wire2api_String,
      constMeta: kWidgetTypeToNameConstMeta,
      argValues: [widgetType],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kWidgetTypeToNameConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "widget_type_to_name",
        argNames: ["widgetType"],
      );

  Future<String> widgetTypeToIcon(
      {required WidgetType widgetType, dynamic hint}) {
    var arg0 = api2wire_widget_type(widgetType);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_widget_type_to_icon(port_, arg0),
      parseSuccessData: _wire2api_String,
      constMeta: kWidgetTypeToIconConstMeta,
      argValues: [widgetType],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kWidgetTypeToIconConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "widget_type_to_icon",
        argNames: ["widgetType"],
      );

  Future<String> helloWorld({dynamic hint}) {
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_hello_world(port_),
      parseSuccessData: _wire2api_String,
      constMeta: kHelloWorldConstMeta,
      argValues: [],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kHelloWorldConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "hello_world",
        argNames: [],
      );

  void dispose() {
    _platform.dispose();
  }
// Section: wire2api

  String _wire2api_String(dynamic raw) {
    return raw as String;
  }

  VysmaColumnLayoutSetting _wire2api_box_autoadd_vysma_column_layout_setting(
      dynamic raw) {
    return _wire2api_vysma_column_layout_setting(raw);
  }

  VysmaColumnLayoutSetting?
      _wire2api_opt_box_autoadd_vysma_column_layout_setting(dynamic raw) {
    return raw == null
        ? null
        : _wire2api_box_autoadd_vysma_column_layout_setting(raw);
  }

  int _wire2api_u8(dynamic raw) {
    return raw as int;
  }

  Uint8List _wire2api_uint_8_list(dynamic raw) {
    return raw as Uint8List;
  }

  VysmaColumnLayoutSetting _wire2api_vysma_column_layout_setting(dynamic raw) {
    final arr = raw as List<dynamic>;
    if (arr.length != 4)
      throw Exception('unexpected arr length: expect 4 but see ${arr.length}');
    return VysmaColumnLayoutSetting(
      elementId: _wire2api_String(arr[0]),
      parentElementId: _wire2api_String(arr[1]),
      icon: _wire2api_String(arr[2]),
      label: _wire2api_String(arr[3]),
    );
  }
}

// Section: api2wire

@protected
int api2wire_i32(int raw) {
  return raw;
}

@protected
int api2wire_u8(int raw) {
  return raw;
}

@protected
int api2wire_widget_type(WidgetType raw) {
  return api2wire_i32(raw.index);
}
// Section: finalizer
